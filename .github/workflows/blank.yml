# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    # Set the schedule for the cron job, using standard cron syntax
    - cron: '20 * * * *'
    - cron: '26 * * * *'
    - cron: '32 * * * *'
    - cron: '38 * * * *'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  
  get-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.set-date.outputs.date }}
    steps:
      - name: set date output 
        id: set-date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
             echo The cron job will run at minute ${{ github.event.schedule.cron.split(' ')[0] }}
  # This workflow contains a single job called ""
  run-e2e-test:
    needs: [get-date]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo ${{needs.get-date.outputs.date}}-${{github.event.inputs.branch || github.ref_name}}
